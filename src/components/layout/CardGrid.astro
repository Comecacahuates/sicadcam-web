---
export interface Props {
  columns?: '1' | '2' | '3' | '4';
  gap?: 'sm' | 'md' | 'lg' | 'xl';
  breakpoints?: {
    sm?: '1' | '2' | '3' | '4';
    md?: '1' | '2' | '3' | '4';
    lg?: '1' | '2' | '3' | '4';
  };
  class?: string;
}

const { 
  columns = '3',
  gap = 'lg',
  breakpoints = { md: '3' },
  class: className = ''
} = Astro.props;

const gapClasses = {
  sm: 'gap-4',
  md: 'gap-6',
  lg: 'gap-8',
  xl: 'gap-12'
};

const columnClasses = {
  '1': 'grid-cols-1',
  '2': 'grid-cols-2',
  '3': 'grid-cols-3',
  '4': 'grid-cols-4'
};

// Build responsive classes
let responsiveClasses = 'grid grid-cols-1'; // Always start with 1 column on mobile

if (breakpoints.sm) {
  responsiveClasses += ` sm:${columnClasses[breakpoints.sm]}`;
}
if (breakpoints.md) {
  responsiveClasses += ` md:${columnClasses[breakpoints.md]}`;
}
if (breakpoints.lg) {
  responsiveClasses += ` lg:${columnClasses[breakpoints.lg]}`;
}

// If no breakpoints specified, use default responsive behavior
if (!breakpoints.sm && !breakpoints.md && !breakpoints.lg) {
  if (columns === '3') {
    responsiveClasses = 'grid grid-cols-1 md:grid-cols-3';
  } else if (columns === '2') {
    responsiveClasses = 'grid grid-cols-1 md:grid-cols-2';
  } else if (columns === '4') {
    responsiveClasses = 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4';
  } else {
    responsiveClasses = `grid ${columnClasses[columns]}`;
  }
}

const classes = `${responsiveClasses} ${gapClasses[gap]} ${className}`;
---

<div class={classes}>
  <slot />
</div>
