---
import Heading from './Heading.astro';
import Text from './Text.astro';

export interface Props {
  features: Array<{
    title: string;
    description: string;
    iconColor: 'blue' | 'green' | 'purple' | 'yellow' | 'red' | 'indigo';
    iconPath: string;
  }>;
  class?: string;
}

const { features, class: className = '' } = Astro.props;

const colorClasses = {
  blue: 'bg-blue-500 border-blue-200',
  green: 'bg-green-500 border-green-200',
  purple: 'bg-purple-500 border-purple-200',
  yellow: 'bg-yellow-500 border-yellow-200',
  red: 'bg-red-500 border-red-200',
  indigo: 'bg-indigo-500 border-indigo-200',
};
---

<div class={`relative ${className}`}>
  <!-- Timeline line -->
  <div class="absolute left-6 top-0 bottom-0 w-0.5 bg-gray-200"></div>
  
  <div class="space-y-8">
    {features.map((feature, index) => (
      <div class="relative flex items-start">
        <!-- Timeline dot -->
        <div
          class={`w-12 h-12 ${colorClasses[feature.iconColor]} rounded-full flex items-center justify-center z-10 border-4 border-white shadow-sm`}
        >
          <svg
            class="w-6 h-6 text-white"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d={feature.iconPath}
            ></path>
          </svg>
        </div>
        
        <!-- Content -->
        <div class="ml-6 flex-1 pb-8">
          <Heading as="h3" variant="card" class="mb-2 text-gray-900">
            {feature.title}
          </Heading>
          <Text variant="body" color="muted" class="leading-relaxed">
            {feature.description}
          </Text>
        </div>
      </div>
    ))}
  </div>
</div>
