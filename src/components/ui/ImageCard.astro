---
import Card from './Card.astro';

export interface Props {
  imageSrc: string;
  imageAlt: string;
  layout?: 'stacked' | 'overlay' | 'side';
  imageAspect?: 'square' | 'video' | 'portrait' | 'custom';
  imagePosition?: 'left' | 'right' | 'top';
  overlayGradient?: boolean;
  overlayOpacity?: 'light' | 'medium' | 'dark';
  contentPadding?: 'none' | 'sm' | 'md' | 'lg';
  hover?: boolean;
  class?: string;
}

const { 
  imageSrc,
  imageAlt,
  layout = 'stacked',
  imageAspect = 'video',
  imagePosition = 'left',
  overlayGradient = true,
  overlayOpacity = 'medium',
  contentPadding = 'md',
  hover = true,
  class: className = ''
} = Astro.props;

const aspectClasses = {
  square: 'aspect-square',
  video: 'aspect-[4/3]',
  portrait: 'aspect-[3/4]',
  custom: '' // Let parent define aspect ratio
};

const overlayClasses = {
  light: 'from-black/40 via-black/10 to-transparent',
  medium: 'from-black/70 via-black/20 to-transparent',
  dark: 'from-black/90 via-black/40 to-transparent'
};

const paddingClasses = {
  none: '',
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8'
};
---

{layout === 'overlay' ? (
  <Card padding="none" hover={hover} class={`overflow-hidden group ${className}`}>
    <div class={`${aspectClasses[imageAspect]} relative`}>
      <img 
        src={imageSrc}
        alt={imageAlt}
        class="w-full h-full object-cover"
      />
      {overlayGradient && (
        <div class={`absolute inset-0 bg-gradient-to-t ${overlayClasses[overlayOpacity]}`}></div>
      )}
      <div class={`absolute bottom-0 left-0 right-0 text-white ${paddingClasses[contentPadding]}`}>
        <slot />
      </div>
    </div>
  </Card>
) : layout === 'side' ? (
  <Card padding="none" hover={hover} class={className}>
    <div class="flex flex-col sm:flex-row">
      <div class={`sm:w-1/3 ${imagePosition === 'right' ? 'sm:order-2' : ''}`}>
        <img 
          src={imageSrc}
          alt={imageAlt}
          class={`w-full h-48 sm:h-full object-cover ${
            imagePosition === 'right' 
              ? 'rounded-t-lg sm:rounded-r-lg sm:rounded-t-none' 
              : 'rounded-t-lg sm:rounded-l-lg sm:rounded-t-none'
          }`}
        />
      </div>
      <div class={`sm:w-2/3 ${paddingClasses[contentPadding]} ${imagePosition === 'right' ? 'sm:order-1' : ''}`}>
        <slot />
      </div>
    </div>
  </Card>
) : (
  <!-- Stacked layout (default) -->
  <Card padding="none" hover={hover} class={className}>
    <div class={aspectClasses[imageAspect]}>
      <img 
        src={imageSrc}
        alt={imageAlt}
        class="w-full h-full object-cover rounded-t-lg"
      />
    </div>
    <div class={paddingClasses[contentPadding]}>
      <slot />
    </div>
  </Card>
)}
