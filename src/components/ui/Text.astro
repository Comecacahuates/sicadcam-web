---
export interface Props {
  as?: 'p' | 'span' | 'div';
  variant?: 'body' | 'lead' | 'small' | 'caption' | 'body-light' | 'lead-light';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  color?: 'default' | 'muted' | 'light' | 'white' | 'blue';
  class?: string;
}

const { 
  as: Tag = 'p',
  variant = 'body',
  size,
  color = 'default',
  class: className = ''
} = Astro.props;

const variantClasses = {
  body: 'text-base leading-relaxed',
  lead: 'text-lg md:text-xl leading-relaxed font-medium',
  small: 'text-sm leading-normal',
  caption: 'text-xs leading-normal',
  'body-light': 'text-base leading-relaxed font-light',
  'lead-light': 'text-lg md:text-xl leading-relaxed font-light'
};

const sizeClasses = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg',
  xl: 'text-xl'
};

const colorClasses = {
  default: 'text-slate-700',
  muted: 'text-slate-600',
  light: 'text-slate-500',
  white: 'text-white',
  blue: 'text-blue-600'
};

// Size overrides variant if specified
const finalClasses = [
  size ? sizeClasses[size] : variantClasses[variant],
  colorClasses[color],
  className
].filter(Boolean).join(' ');
---

<Tag class={finalClasses}>
  <slot />
</Tag>
