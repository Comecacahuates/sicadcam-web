---
import Section, { type Props as SectionProps } from "../layout/Section.astro";
import SectionHeader from "./SectionHeader.astro";
import Button from "../ui/Button.astro";
import ButtonGroup from "../ui/ButtonGroup.astro";

type Themes = "blue" | "dark" | "gray" | "white";
type TextColor = "default" | "white" | "muted";
type ButtonVariant =
  | "primary"
  | "secondary"
  | "outline"
  | "ghost"
  | "white"
  | "white-outline";
type ColorScheme = {
  titleColor: TextColor;
  descriptionColor: TextColor;
  primaryVariant: ButtonVariant;
  secondaryVariant: ButtonVariant;
};

export interface Props extends SectionProps {
  title: string;
  description: string;
  primaryButton: {
    text: string;
    href: string;
  };
  secondaryButton?: {
    text: string;
    href: string;
  };
  background?: Themes;
  padding?: "sm" | "md" | "lg" | "xl";
  titleLevel?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
  titleVariant?: "hero" | "section" | "subsection" | "card";
  maxWidth?:
    | "sm"
    | "md"
    | "lg"
    | "xl"
    | "2xl"
    | "3xl"
    | "4xl"
    | "5xl"
    | "6xl"
    | "7xl";
}

const {
  title,
  description,
  primaryButton,
  secondaryButton,
  background = "blue",
  padding = "lg",
  titleLevel = "h2",
  titleVariant = "section",
  maxWidth = "2xl",
  class: _class,
  ...rest
} = Astro.props;

// Define color schemes for different backgrounds
const colorSchemes: Record<Themes, ColorScheme> = {
  blue: {
    titleColor: "white",
    descriptionColor: "white",
    primaryVariant: "white",
    secondaryVariant: "white-outline",
  },
  dark: {
    titleColor: "white",
    descriptionColor: "white",
    primaryVariant: "primary",
    secondaryVariant: "white-outline",
  },
  gray: {
    titleColor: "default",
    descriptionColor: "muted",
    primaryVariant: "primary",
    secondaryVariant: "outline",
  },
  white: {
    titleColor: "default",
    descriptionColor: "muted",
    primaryVariant: "primary",
    secondaryVariant: "outline",
  },
};

// Get the color scheme with fallback to blue if background is not found
const scheme = colorSchemes[background] || colorSchemes.blue;
---

<Section class={_class} {...rest}>
  <div class="text-center">
    <SectionHeader
      title={title}
      description={description}
      textColor={scheme.titleColor}
    />

    <ButtonGroup alignment="center">
      <Button
        href={primaryButton.href}
        variant={scheme.primaryVariant}
        size="lg"
      >
        {primaryButton.text}
      </Button>
      {
        secondaryButton && (
          <Button
            href={secondaryButton.href}
            variant={scheme.secondaryVariant}
            size="lg"
          >
            {secondaryButton.text}
          </Button>
        )
      }
    </ButtonGroup>
  </div>
</Section>
