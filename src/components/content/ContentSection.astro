---
import Section from '../layout/Section.astro';
import TwoColumn from './TwoColumn.astro';
import Heading from '../ui/Heading.astro';
import Text from '../ui/Text.astro';
import Button from '../ui/Button.astro';
import ButtonGroup from '../ui/ButtonGroup.astro';

export interface Props {
  title: string;
  leadText?: string;
  imageSrc: string;
  imageAlt: string;
  imagePosition?: 'left' | 'right';
  imageClass?: string;
  primaryButton?: {
    text: string;
    href: string;
    variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'white' | 'white-outline';
  };
  secondaryButton?: {
    text: string;
    href: string;
    variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'white' | 'white-outline';
  };
  background?: 'white' | 'gray' | 'blue' | 'dark';
  padding?: 'sm' | 'md' | 'lg' | 'xl';
  titleLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  titleVariant?: 'hero' | 'section' | 'subsection' | 'card';
  class?: string;
}

const { 
  title,
  leadText,
  imageSrc,
  imageAlt,
  imagePosition = 'right',
  imageClass = '',
  primaryButton,
  secondaryButton,
  background = 'white',
  padding = 'lg',
  titleLevel = 'h2',
  titleVariant = 'section',
  class: className = ''
} = Astro.props;

// Define color schemes for different backgrounds
const colorSchemes = {
  white: {
    titleColor: 'default',
    leadColor: 'muted',
    leadClass: ''
  },
  gray: {
    titleColor: 'default',
    leadColor: 'muted',
    leadClass: ''
  },
  blue: {
    titleColor: 'white',
    leadColor: 'white',
    leadClass: 'text-blue-100'
  },
  dark: {
    titleColor: 'white',
    leadColor: 'white',
    leadClass: 'text-slate-300'
  }
};

const scheme = colorSchemes[background];
---

<Section background={background} padding={padding} class={className}>
  <TwoColumn
    imagePosition={imagePosition}
    imageSrc={imageSrc}
    imageAlt={imageAlt}
    imageClass={imageClass}
  >
    <div slot="content">
      <Heading 
        as={titleLevel} 
        variant={titleVariant} 
        color={scheme.titleColor}
        class="mb-6"
      >
        {title}
      </Heading>
      
      {leadText && (
        <Text 
          variant="lead" 
          color={scheme.leadColor}
          class={`mb-6 ${scheme.leadClass}`}
        >
          {leadText}
        </Text>
      )}
      
      <!-- Body content slot for flexible content -->
      <div class="mb-8">
        <slot />
      </div>
      
      <!-- Buttons -->
      {(primaryButton || secondaryButton) && (
        <ButtonGroup alignment="start">
          {primaryButton && (
            <Button 
              href={primaryButton.href} 
              variant={primaryButton.variant || 'primary'}
            >
              {primaryButton.text}
            </Button>
          )}
          {secondaryButton && (
            <Button 
              href={secondaryButton.href} 
              variant={secondaryButton.variant || 'outline'}
            >
              {secondaryButton.text}
            </Button>
          )}
        </ButtonGroup>
      )}
    </div>
  </TwoColumn>
</Section>
