---
import Section from "../layout/Section.astro";
import TwoColumn from "./TwoColumn.astro";
import Text from "../ui/Text.astro";
import CtaButtons, {
  type Props as CtaButtonsProps,
} from "../ui/CtaButtons.astro";

export interface Props {
  title: string;
  leadText?: string;
  imageSrc: string;
  imageAlt: string;
  imagePosition?: "left" | "right";
  imageClass?: string;
  primaryButton?: CtaButtonsProps["primaryCta"];
  secondaryButton?: CtaButtonsProps["secondaryCta"];
  background?: "white" | "gray" | "blue" | "dark";
  padding?: "sm" | "md" | "lg" | "xl";
  class?: string;
}

const {
  title,
  leadText,
  imageSrc,
  imageAlt,
  imagePosition = "right",
  imageClass = "",
  primaryButton,
  secondaryButton,
  background = "white",
  padding = "lg",
  class: className = "",
} = Astro.props;

// Define color schemes for different backgrounds
type ColorScheme = {
  titleColor: string;
  leadColor: string;
  leadClass: string;
  theme: CtaButtonsProps["theme"];
};

const colorSchemes: Record<string, ColorScheme> = {
  white: {
    titleColor: "text-slate-900",
    leadColor: "muted",
    leadClass: "",
    theme: "light",
  },
  gray: {
    titleColor: "text-slate-900",
    leadColor: "muted",
    leadClass: "",
    theme: "light",
  },
  blue: {
    titleColor: "text-white",
    leadColor: "white",
    leadClass: "text-blue-100",
    theme: "dark",
  },
  dark: {
    titleColor: "text-white",
    leadColor: "white",
    leadClass: "text-slate-300",
    theme: "dark",
  },
};

const scheme = colorSchemes[background];
---

<Section background={background} padding={padding} class={className}>
  <TwoColumn
    imagePosition={imagePosition}
    imageSrc={imageSrc}
    imageAlt={imageAlt}
    imageClass={imageClass}
  >
    <div slot="content">
      <h2 class={`text-3xl md:text-4xl font-bold mb-6 ${scheme.titleColor}`}>
        {title}
      </h2>

      {
        leadText && (
          <Text
            variant="lead"
            color={scheme.leadColor}
            class={`mb-6 ${scheme.leadClass}`}
          >
            {leadText}
          </Text>
        )
      }

      <!-- Body content slot for flexible content -->
      <div class="mb-8">
        <slot />
      </div>

      <!-- Buttons -->
      {
        primaryButton && (
          <CtaButtons
            primaryCta={primaryButton}
            secondaryCta={secondaryButton}
            alignment="start"
            theme={scheme.theme}
          />
        )
      }
    </div>
  </TwoColumn>
</Section>
